buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["KlaviyoReactNativeSdk_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    // Android Gradle Plugin. Best to keep in sync with the klaviyo-android-sdk AGP version
    classpath "com.android.tools.build:gradle:8.8.0"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["KlaviyoReactNativeSdk_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["KlaviyoReactNativeSdk_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.klaviyoreactnativesdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
  }

  buildFeatures {
    buildConfig true
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  maven { url "https://jitpack.io" }
  mavenCentral()
  google()
}

def klaviyoAndroidSdkVersion = getExtOrDefault("klaviyoAndroidSdkVersion")
def kotlin_version = getExtOrDefault("kotlinVersion")
def localProperties = new Properties()
if (rootProject.file("local.properties").canRead()) {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
}
def reactNativeAndroidVersion = localProperties['reactNativeAndroidVersion'] ?: ""


dependencies {
  if (reactNativeAndroidVersion) {
    // For local development of the SDK code, specify the react-android version to use
    // So that the SDK can be built and .kt files are linted against a real version of react-native
    implementation "com.facebook.react:react-android:$reactNativeAndroidVersion"
  } else {
    // Production build / once embedded in a react-native app,
    // the react-native version gets loaded in from the application dependencies.
    // For < 0.71, this will be from the local maven repo
    // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"
  }
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  // Klaviyo Android SDK
  api "com.github.klaviyo.klaviyo-android-sdk:analytics:$klaviyoAndroidSdkVersion"
  api "com.github.klaviyo.klaviyo-android-sdk:push-fcm:$klaviyoAndroidSdkVersion"
  api "com.github.klaviyo.klaviyo-android-sdk:forms:$klaviyoAndroidSdkVersion"
  implementation "com.github.klaviyo.klaviyo-android-sdk:core:$klaviyoAndroidSdkVersion"

  // We used reflection to enumerate keywords in the Klaviyo Android SDK dynamically
  implementation "org.jetbrains.kotlin:kotlin-reflect:1.8.21"
}

